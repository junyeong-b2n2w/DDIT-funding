<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Funding-Mapper">

	<select id="selectFundingByFno" parameterType="int" resultType="funding">
		select * from 
				(select F_FUNDING.*, ( PRICE_PRE/ PRICE_GOAL ) *100 percent, 
					TAG || title || WRITER || CONTENT alltext from F_FUNDING)
		where fno=#{fno}
	</select>
	
	<sql id="status">
		<if test="fstatus != null ">
			and fstatus like '%'||#{fstatus}||'%'		
		</if>
	</sql>
	
	<sql id="category">
		<if test="category != null ">
			and category like '%'||#{category}||'%'		
		</if>
	</sql>
	
	


	
	<sql id="percent">
		<if test="max_percent != null and min_percent != null ">
			and percent between #{min_percent} and #{max_percent}
		</if>
	</sql> 
	
	<sql id="min_percent">
		<if test="max_percent == null and min_percent != null ">
			and percent <![CDATA[ >=]]>  #{min_percent} 
		</if>
	</sql> 
	<sql id="max_percent">
		<if test="max_percent != null and min_percent == null ">
			and percent <![CDATA[ <= ]]>   #{max_percent}
		</if>
	</sql> 

	
	<sql id="search">
		<if test="keyword != null ">
			and alltext like '%'||#{keyword}||'%'			
		</if>
	</sql>
	
	<select id="selectFundingList2" resultType="funding">
		select * from 
				(select F_FUNDING.*, ( PRICE_PRE/ PRICE_GOAL ) *100 percent, 
					TAG || title || WRITER || CONTENT alltext from F_FUNDING)
		where fstatus not in ('no_accept')
	
		<include refid="category" />
		<include refid="status" />
		<include refid="min_percent" />
		<include refid="max_percent" />
		<include refid="percent" />
		<include refid="search" />
		order by regdate desc 
	</select>
	
	<select id="selectFundingCount" resultType="int">
		select count(*) from 
				(select F_FUNDING.*, ( PRICE_PRE/ PRICE_GOAL ) *100 percent, 
					TAG || title || WRITER || CONTENT alltext from F_FUNDING)
		where fno is not null
	
		<include refid="category" />
		<include refid="status" />
		<include refid="min_percent" />
		<include refid="max_percent" />
		<include refid="percent" />
		<include refid="search" />
		order by regdate desc 
	</select>
	
	<select id="selectFundingList" resultType="funding">
		select
		* 
		from f_funding
		where fno is not null
		order by regdate desc 
	</select>
	
	<select id="selectFundingSequenceNextValue" resultType="int">
		select funding_seq.nextVal
		from dual
	</select>
	
	
	<update id="insertFunding" parameterType="funding">
		insert into f_funding(fno,writer, title, content, price_goal, regdate, enddate,startdate, fstatus, tag, furl, creater, category, project_img) 
		values(#{fno},#{writer}, #{title}, #{content}, #{price_goal}, sysdate, #{enddate}, #{startdate}, 'no_accept', #{tag}, #{furl}, #{creater}, #{category}, #{project_img})
		<selectKey keyProperty="fno" resultType="int">
			SELECT fno FROM f_funding WHERE fno = #{fno}
		</selectKey>
	</update>
	
	<update id="updateFunding" parameterType="funding">
		insert into f_funding(fno,writer, title, content, price_goal, regdate, enddate,startdate, fstatus, tag, furl, creater, category, project_img) 
		values(#{fno},#{writer}, #{title}, #{content}, #{price_goal}, sysdate, #{enddate}, #{startdate}, 'no_accept', #{tag}, #{furl}, #{creater}, #{category}, #{project_img})
	</update>
	
	<update id="deleteFunding" parameterType="int" >
		delete 
		from f_funding 
		where fno=#{fno}		
	</update>
	
	<!-- ë²” -->
	<update id="updatePrice" parameterType="funding">
		update f_funding
		set price_pre = price_pre + #{price_pre}
		where fno = #{fno}
	</update>
	
	<update id="successFunding" parameterType="int">
		DECLARE BEGIN
			update f_funding
			set fstatus = 'success'
			where fno = #{fno};
			
			update f_salelog
			set sstatus = 'success'
			where fno = #{fno};
		END;
	</update>
	
	<update id="failFunding" parameterType="int">
		DECLARE BEGIN
			update f_funding
			set fstatus = 'fail'
			where fno = #{fno};
			
			update f_salelog
			set sstatus = 'fail'
			where fno = #{fno};
		END;
	</update>

</mapper>